# coding: utf-8

from __future__ import absolute_import

from typing import List  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.byte_sequence_information import ByteSequenceInformation
from swagger_server import util


class InternalSignatureInformation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, byte_sequences: List[ByteSequenceInformation]=None, signature_id: str=None, signature_id_namespace: str=None, signature_name: str=None, signature_note: str=None):  # noqa: E501
        """InternalSignatureInformation - a model defined in Swagger

        :param byte_sequences: The byte_sequences of this InternalSignatureInformation.  # noqa: E501
        :type byte_sequences: List[ByteSequenceInformation]
        :param signature_id: The signature_id of this InternalSignatureInformation.  # noqa: E501
        :type signature_id: str
        :param signature_id_namespace: The signature_id_namespace of this InternalSignatureInformation.  # noqa: E501
        :type signature_id_namespace: str
        :param signature_name: The signature_name of this InternalSignatureInformation.  # noqa: E501
        :type signature_name: str
        :param signature_note: The signature_note of this InternalSignatureInformation.  # noqa: E501
        :type signature_note: str
        """
        self.swagger_types = {
            'byte_sequences': List[ByteSequenceInformation],
            'signature_id': str,
            'signature_id_namespace': str,
            'signature_name': str,
            'signature_note': str
        }

        self.attribute_map = {
            'byte_sequences': 'byteSequences',
            'signature_id': 'signatureId',
            'signature_id_namespace': 'signatureIdNamespace',
            'signature_name': 'signatureName',
            'signature_note': 'signatureNote'
        }

        self._byte_sequences = byte_sequences
        self._signature_id = signature_id
        self._signature_id_namespace = signature_id_namespace
        self._signature_name = signature_name
        self._signature_note = signature_note

    @classmethod
    def from_dict(cls, dikt) -> 'InternalSignatureInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InternalSignatureInformation of this InternalSignatureInformation.  # noqa: E501
        :rtype: InternalSignatureInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def byte_sequences(self) -> List[ByteSequenceInformation]:
        """Gets the byte_sequences of this InternalSignatureInformation.


        :return: The byte_sequences of this InternalSignatureInformation.
        :rtype: List[ByteSequenceInformation]
        """
        return self._byte_sequences

    @byte_sequences.setter
    def byte_sequences(self, byte_sequences: List[ByteSequenceInformation]):
        """Sets the byte_sequences of this InternalSignatureInformation.


        :param byte_sequences: The byte_sequences of this InternalSignatureInformation.
        :type byte_sequences: List[ByteSequenceInformation]
        """

        self._byte_sequences = byte_sequences

    @property
    def signature_id(self) -> str:
        """Gets the signature_id of this InternalSignatureInformation.


        :return: The signature_id of this InternalSignatureInformation.
        :rtype: str
        """
        return self._signature_id

    @signature_id.setter
    def signature_id(self, signature_id: str):
        """Sets the signature_id of this InternalSignatureInformation.


        :param signature_id: The signature_id of this InternalSignatureInformation.
        :type signature_id: str
        """

        self._signature_id = signature_id

    @property
    def signature_id_namespace(self) -> str:
        """Gets the signature_id_namespace of this InternalSignatureInformation.


        :return: The signature_id_namespace of this InternalSignatureInformation.
        :rtype: str
        """
        return self._signature_id_namespace

    @signature_id_namespace.setter
    def signature_id_namespace(self, signature_id_namespace: str):
        """Sets the signature_id_namespace of this InternalSignatureInformation.


        :param signature_id_namespace: The signature_id_namespace of this InternalSignatureInformation.
        :type signature_id_namespace: str
        """

        self._signature_id_namespace = signature_id_namespace

    @property
    def signature_name(self) -> str:
        """Gets the signature_name of this InternalSignatureInformation.


        :return: The signature_name of this InternalSignatureInformation.
        :rtype: str
        """
        return self._signature_name

    @signature_name.setter
    def signature_name(self, signature_name: str):
        """Sets the signature_name of this InternalSignatureInformation.


        :param signature_name: The signature_name of this InternalSignatureInformation.
        :type signature_name: str
        """

        self._signature_name = signature_name

    @property
    def signature_note(self) -> str:
        """Gets the signature_note of this InternalSignatureInformation.


        :return: The signature_note of this InternalSignatureInformation.
        :rtype: str
        """
        return self._signature_note

    @signature_note.setter
    def signature_note(self, signature_note: str):
        """Sets the signature_note of this InternalSignatureInformation.


        :param signature_note: The signature_note of this InternalSignatureInformation.
        :type signature_note: str
        """

        self._signature_note = signature_note
