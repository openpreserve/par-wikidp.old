#!/usr/bin/python3
# coding: UTF-8
#
# PAR Consortium
# Copyright (C) 2020
# All rights reserved.
#
# This code is distributed under the terms of the GNU General Public
# License, Version 3. See the text file "COPYING" for further details
# about the terms of this license.

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RegistryVersionInformation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, registry_namespace: str=None, version: str=None):  # noqa: E501
        """RegistryVersionInformation - a model defined in Swagger

        :param name: The name of this RegistryVersionInformation.  # noqa: E501
        :type name: str
        :param registry_namespace: The registry_namespace of this RegistryVersionInformation.  # noqa: E501
        :type registry_namespace: str
        :param version: The version of this RegistryVersionInformation.  # noqa: E501
        :type version: str
        """
        self.swagger_types = {
            'name': str,
            'registry_namespace': str,
            'version': str
        }

        self.attribute_map = {
            'name': 'name',
            'registry_namespace': 'registryNamespace',
            'version': 'version'
        }

        self._name = name
        self._registry_namespace = registry_namespace
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'RegistryVersionInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RegistryVersionInformation of this RegistryVersionInformation.  # noqa: E501
        :rtype: RegistryVersionInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this RegistryVersionInformation.


        :return: The name of this RegistryVersionInformation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this RegistryVersionInformation.


        :param name: The name of this RegistryVersionInformation.
        :type name: str
        """

        self._name = name

    @property
    def registry_namespace(self) -> str:
        """Gets the registry_namespace of this RegistryVersionInformation.


        :return: The registry_namespace of this RegistryVersionInformation.
        :rtype: str
        """
        return self._registry_namespace

    @registry_namespace.setter
    def registry_namespace(self, registry_namespace: str):
        """Sets the registry_namespace of this RegistryVersionInformation.


        :param registry_namespace: The registry_namespace of this RegistryVersionInformation.
        :type registry_namespace: str
        """

        self._registry_namespace = registry_namespace

    @property
    def version(self) -> str:
        """Gets the version of this RegistryVersionInformation.


        :return: The version of this RegistryVersionInformation.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this RegistryVersionInformation.


        :param version: The version of this RegistryVersionInformation.
        :type version: str
        """

        self._version = version
