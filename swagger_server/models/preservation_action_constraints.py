#!/usr/bin/python3
# coding: UTF-8
#
# PAR Consortium
# Copyright (C) 2020
# All rights reserved.
#
# This code is distributed under the terms of the GNU General Public
# License, Version 3. See the text file "COPYING" for further details
# about the terms of this license.

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.file_format import FileFormat
from swagger_server.models.par_property import ParProperty
from swagger_server import util


class PreservationActionConstraints(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, allowed_formats: List[FileFormat]=None, allowed_properties_all_of: List[ParProperty]=None, allowed_properties_any_of: List[ParProperty]=None, input_item_name: str=None):  # noqa: E501
        """PreservationActionConstraints - a model defined in Swagger

        :param allowed_formats: The allowed_formats of this PreservationActionConstraints.  # noqa: E501
        :type allowed_formats: List[FileFormat]
        :param allowed_properties_all_of: The allowed_properties_all_of of this PreservationActionConstraints.  # noqa: E501
        :type allowed_properties_all_of: List[ParProperty]
        :param allowed_properties_any_of: The allowed_properties_any_of of this PreservationActionConstraints.  # noqa: E501
        :type allowed_properties_any_of: List[ParProperty]
        :param input_item_name: The input_item_name of this PreservationActionConstraints.  # noqa: E501
        :type input_item_name: str
        """
        self.swagger_types = {
            'allowed_formats': List[FileFormat],
            'allowed_properties_all_of': List[ParProperty],
            'allowed_properties_any_of': List[ParProperty],
            'input_item_name': str
        }

        self.attribute_map = {
            'allowed_formats': 'allowedFormats',
            'allowed_properties_all_of': 'allowedPropertiesAllOf',
            'allowed_properties_any_of': 'allowedPropertiesAnyOf',
            'input_item_name': 'inputItemName'
        }

        self._allowed_formats = allowed_formats
        self._allowed_properties_all_of = allowed_properties_all_of
        self._allowed_properties_any_of = allowed_properties_any_of
        self._input_item_name = input_item_name

    @classmethod
    def from_dict(cls, dikt) -> 'PreservationActionConstraints':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PreservationActionConstraints of this PreservationActionConstraints.  # noqa: E501
        :rtype: PreservationActionConstraints
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_formats(self) -> List[FileFormat]:
        """Gets the allowed_formats of this PreservationActionConstraints.


        :return: The allowed_formats of this PreservationActionConstraints.
        :rtype: List[FileFormat]
        """
        return self._allowed_formats

    @allowed_formats.setter
    def allowed_formats(self, allowed_formats: List[FileFormat]):
        """Sets the allowed_formats of this PreservationActionConstraints.


        :param allowed_formats: The allowed_formats of this PreservationActionConstraints.
        :type allowed_formats: List[FileFormat]
        """

        self._allowed_formats = allowed_formats

    @property
    def allowed_properties_all_of(self) -> List[ParProperty]:
        """Gets the allowed_properties_all_of of this PreservationActionConstraints.


        :return: The allowed_properties_all_of of this PreservationActionConstraints.
        :rtype: List[ParProperty]
        """
        return self._allowed_properties_all_of

    @allowed_properties_all_of.setter
    def allowed_properties_all_of(self, allowed_properties_all_of: List[ParProperty]):
        """Sets the allowed_properties_all_of of this PreservationActionConstraints.


        :param allowed_properties_all_of: The allowed_properties_all_of of this PreservationActionConstraints.
        :type allowed_properties_all_of: List[ParProperty]
        """

        self._allowed_properties_all_of = allowed_properties_all_of

    @property
    def allowed_properties_any_of(self) -> List[ParProperty]:
        """Gets the allowed_properties_any_of of this PreservationActionConstraints.


        :return: The allowed_properties_any_of of this PreservationActionConstraints.
        :rtype: List[ParProperty]
        """
        return self._allowed_properties_any_of

    @allowed_properties_any_of.setter
    def allowed_properties_any_of(self, allowed_properties_any_of: List[ParProperty]):
        """Sets the allowed_properties_any_of of this PreservationActionConstraints.


        :param allowed_properties_any_of: The allowed_properties_any_of of this PreservationActionConstraints.
        :type allowed_properties_any_of: List[ParProperty]
        """

        self._allowed_properties_any_of = allowed_properties_any_of

    @property
    def input_item_name(self) -> str:
        """Gets the input_item_name of this PreservationActionConstraints.


        :return: The input_item_name of this PreservationActionConstraints.
        :rtype: str
        """
        return self._input_item_name

    @input_item_name.setter
    def input_item_name(self, input_item_name: str):
        """Sets the input_item_name of this PreservationActionConstraints.


        :param input_item_name: The input_item_name of this PreservationActionConstraints.
        :type input_item_name: str
        """

        self._input_item_name = input_item_name
