#!/usr/bin/python3
# coding: UTF-8
#
# PAR Consortium
# Copyright (C) 2020
# All rights reserved.
#
# This code is distributed under the terms of the GNU General Public
# License, Version 3. See the text file "COPYING" for further details
# about the terms of this license.

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.author_information import AuthorInformation
from swagger_server.models.publisher_information import PublisherInformation
from swagger_server import util


class DocumentInformation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, author: AuthorInformation=None, availability_description: str=None, availability_note: str=None, display_text: str=None, document_ipr: str=None, document_id: str=None, document_id_namespace: str=None, document_note: str=None, document_type: str=None, publication_date: str=None, publisher: PublisherInformation=None, title_text: str=None):  # noqa: E501
        """DocumentInformation - a model defined in Swagger

        :param author: The author of this DocumentInformation.  # noqa: E501
        :type author: AuthorInformation
        :param availability_description: The availability_description of this DocumentInformation.  # noqa: E501
        :type availability_description: str
        :param availability_note: The availability_note of this DocumentInformation.  # noqa: E501
        :type availability_note: str
        :param display_text: The display_text of this DocumentInformation.  # noqa: E501
        :type display_text: str
        :param document_ipr: The document_ipr of this DocumentInformation.  # noqa: E501
        :type document_ipr: str
        :param document_id: The document_id of this DocumentInformation.  # noqa: E501
        :type document_id: str
        :param document_id_namespace: The document_id_namespace of this DocumentInformation.  # noqa: E501
        :type document_id_namespace: str
        :param document_note: The document_note of this DocumentInformation.  # noqa: E501
        :type document_note: str
        :param document_type: The document_type of this DocumentInformation.  # noqa: E501
        :type document_type: str
        :param publication_date: The publication_date of this DocumentInformation.  # noqa: E501
        :type publication_date: str
        :param publisher: The publisher of this DocumentInformation.  # noqa: E501
        :type publisher: PublisherInformation
        :param title_text: The title_text of this DocumentInformation.  # noqa: E501
        :type title_text: str
        """
        self.swagger_types = {
            'author': AuthorInformation,
            'availability_description': str,
            'availability_note': str,
            'display_text': str,
            'document_ipr': str,
            'document_id': str,
            'document_id_namespace': str,
            'document_note': str,
            'document_type': str,
            'publication_date': str,
            'publisher': PublisherInformation,
            'title_text': str
        }

        self.attribute_map = {
            'author': 'author',
            'availability_description': 'availabilityDescription',
            'availability_note': 'availabilityNote',
            'display_text': 'displayText',
            'document_ipr': 'documentIPR',
            'document_id': 'documentId',
            'document_id_namespace': 'documentIdNamespace',
            'document_note': 'documentNote',
            'document_type': 'documentType',
            'publication_date': 'publicationDate',
            'publisher': 'publisher',
            'title_text': 'titleText'
        }

        self._author = author
        self._availability_description = availability_description
        self._availability_note = availability_note
        self._display_text = display_text
        self._document_ipr = document_ipr
        self._document_id = document_id
        self._document_id_namespace = document_id_namespace
        self._document_note = document_note
        self._document_type = document_type
        self._publication_date = publication_date
        self._publisher = publisher
        self._title_text = title_text

    @classmethod
    def from_dict(cls, dikt) -> 'DocumentInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DocumentInformation of this DocumentInformation.  # noqa: E501
        :rtype: DocumentInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self) -> AuthorInformation:
        """Gets the author of this DocumentInformation.


        :return: The author of this DocumentInformation.
        :rtype: AuthorInformation
        """
        return self._author

    @author.setter
    def author(self, author: AuthorInformation):
        """Sets the author of this DocumentInformation.


        :param author: The author of this DocumentInformation.
        :type author: AuthorInformation
        """

        self._author = author

    @property
    def availability_description(self) -> str:
        """Gets the availability_description of this DocumentInformation.


        :return: The availability_description of this DocumentInformation.
        :rtype: str
        """
        return self._availability_description

    @availability_description.setter
    def availability_description(self, availability_description: str):
        """Sets the availability_description of this DocumentInformation.


        :param availability_description: The availability_description of this DocumentInformation.
        :type availability_description: str
        """

        self._availability_description = availability_description

    @property
    def availability_note(self) -> str:
        """Gets the availability_note of this DocumentInformation.


        :return: The availability_note of this DocumentInformation.
        :rtype: str
        """
        return self._availability_note

    @availability_note.setter
    def availability_note(self, availability_note: str):
        """Sets the availability_note of this DocumentInformation.


        :param availability_note: The availability_note of this DocumentInformation.
        :type availability_note: str
        """

        self._availability_note = availability_note

    @property
    def display_text(self) -> str:
        """Gets the display_text of this DocumentInformation.


        :return: The display_text of this DocumentInformation.
        :rtype: str
        """
        return self._display_text

    @display_text.setter
    def display_text(self, display_text: str):
        """Sets the display_text of this DocumentInformation.


        :param display_text: The display_text of this DocumentInformation.
        :type display_text: str
        """

        self._display_text = display_text

    @property
    def document_ipr(self) -> str:
        """Gets the document_ipr of this DocumentInformation.


        :return: The document_ipr of this DocumentInformation.
        :rtype: str
        """
        return self._document_ipr

    @document_ipr.setter
    def document_ipr(self, document_ipr: str):
        """Sets the document_ipr of this DocumentInformation.


        :param document_ipr: The document_ipr of this DocumentInformation.
        :type document_ipr: str
        """

        self._document_ipr = document_ipr

    @property
    def document_id(self) -> str:
        """Gets the document_id of this DocumentInformation.


        :return: The document_id of this DocumentInformation.
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id: str):
        """Sets the document_id of this DocumentInformation.


        :param document_id: The document_id of this DocumentInformation.
        :type document_id: str
        """

        self._document_id = document_id

    @property
    def document_id_namespace(self) -> str:
        """Gets the document_id_namespace of this DocumentInformation.


        :return: The document_id_namespace of this DocumentInformation.
        :rtype: str
        """
        return self._document_id_namespace

    @document_id_namespace.setter
    def document_id_namespace(self, document_id_namespace: str):
        """Sets the document_id_namespace of this DocumentInformation.


        :param document_id_namespace: The document_id_namespace of this DocumentInformation.
        :type document_id_namespace: str
        """

        self._document_id_namespace = document_id_namespace

    @property
    def document_note(self) -> str:
        """Gets the document_note of this DocumentInformation.


        :return: The document_note of this DocumentInformation.
        :rtype: str
        """
        return self._document_note

    @document_note.setter
    def document_note(self, document_note: str):
        """Sets the document_note of this DocumentInformation.


        :param document_note: The document_note of this DocumentInformation.
        :type document_note: str
        """

        self._document_note = document_note

    @property
    def document_type(self) -> str:
        """Gets the document_type of this DocumentInformation.


        :return: The document_type of this DocumentInformation.
        :rtype: str
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type: str):
        """Sets the document_type of this DocumentInformation.


        :param document_type: The document_type of this DocumentInformation.
        :type document_type: str
        """

        self._document_type = document_type

    @property
    def publication_date(self) -> str:
        """Gets the publication_date of this DocumentInformation.


        :return: The publication_date of this DocumentInformation.
        :rtype: str
        """
        return self._publication_date

    @publication_date.setter
    def publication_date(self, publication_date: str):
        """Sets the publication_date of this DocumentInformation.


        :param publication_date: The publication_date of this DocumentInformation.
        :type publication_date: str
        """

        self._publication_date = publication_date

    @property
    def publisher(self) -> PublisherInformation:
        """Gets the publisher of this DocumentInformation.


        :return: The publisher of this DocumentInformation.
        :rtype: PublisherInformation
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher: PublisherInformation):
        """Sets the publisher of this DocumentInformation.


        :param publisher: The publisher of this DocumentInformation.
        :type publisher: PublisherInformation
        """

        self._publisher = publisher

    @property
    def title_text(self) -> str:
        """Gets the title_text of this DocumentInformation.


        :return: The title_text of this DocumentInformation.
        :rtype: str
        """
        return self._title_text

    @title_text.setter
    def title_text(self, title_text: str):
        """Sets the title_text of this DocumentInformation.


        :param title_text: The title_text of this DocumentInformation.
        :type title_text: str
        """

        self._title_text = title_text
