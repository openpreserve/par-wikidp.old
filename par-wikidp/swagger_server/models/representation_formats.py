#!/usr/bin/python3
# coding: UTF-8
#
# PAR Consortium
# Copyright (C) 2020
# All rights reserved.
#
# This code is distributed under the terms of the GNU General Public
# License, Version 3. See the text file "COPYING" for further details
# about the terms of this license.

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.representation_format import RepresentationFormat
from swagger_server import util


class RepresentationFormats(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, representation_formats: List[RepresentationFormat]=None):  # noqa: E501
        """RepresentationFormats - a model defined in Swagger

        :param representation_formats: The representation_formats of this RepresentationFormats.  # noqa: E501
        :type representation_formats: List[RepresentationFormat]
        """
        self.swagger_types = {
            'representation_formats': List[RepresentationFormat]
        }

        self.attribute_map = {
            'representation_formats': 'representationFormats'
        }

        self._representation_formats = representation_formats

    @classmethod
    def from_dict(cls, dikt) -> 'RepresentationFormats':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RepresentationFormats of this RepresentationFormats.  # noqa: E501
        :rtype: RepresentationFormats
        """
        return util.deserialize_model(dikt, cls)

    @property
    def representation_formats(self) -> List[RepresentationFormat]:
        """Gets the representation_formats of this RepresentationFormats.


        :return: The representation_formats of this RepresentationFormats.
        :rtype: List[RepresentationFormat]
        """
        return self._representation_formats

    @representation_formats.setter
    def representation_formats(self, representation_formats: List[RepresentationFormat]):
        """Sets the representation_formats of this RepresentationFormats.


        :param representation_formats: The representation_formats of this RepresentationFormats.
        :type representation_formats: List[RepresentationFormat]
        """

        self._representation_formats = representation_formats
