#!/usr/bin/python3
# coding: UTF-8
#
# PAR Consortium
# Copyright (C) 2020
# All rights reserved.
#
# This code is distributed under the terms of the GNU General Public
# License, Version 3. See the text file "COPYING" for further details
# about the terms of this license.

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ParIdentifier(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, guid: str=None, name: str=None, namespace: str=None):  # noqa: E501
        """ParIdentifier - a model defined in Swagger

        :param guid: The guid of this ParIdentifier.  # noqa: E501
        :type guid: str
        :param name: The name of this ParIdentifier.  # noqa: E501
        :type name: str
        :param namespace: The namespace of this ParIdentifier.  # noqa: E501
        :type namespace: str
        """
        self.swagger_types = {
            'guid': str,
            'name': str,
            'namespace': str
        }

        self.attribute_map = {
            'guid': 'guid',
            'name': 'name',
            'namespace': 'namespace'
        }

        self._guid = guid
        self._name = name
        self._namespace = namespace

    @classmethod
    def from_dict(cls, dikt) -> 'ParIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ParIdentifier of this ParIdentifier.  # noqa: E501
        :rtype: ParIdentifier
        """
        return util.deserialize_model(dikt, cls)

    @property
    def guid(self) -> str:
        """Gets the guid of this ParIdentifier.


        :return: The guid of this ParIdentifier.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid: str):
        """Sets the guid of this ParIdentifier.


        :param guid: The guid of this ParIdentifier.
        :type guid: str
        """

        self._guid = guid

    @property
    def name(self) -> str:
        """Gets the name of this ParIdentifier.


        :return: The name of this ParIdentifier.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ParIdentifier.


        :param name: The name of this ParIdentifier.
        :type name: str
        """

        self._name = name

    @property
    def namespace(self) -> str:
        """Gets the namespace of this ParIdentifier.


        :return: The namespace of this ParIdentifier.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace: str):
        """Sets the namespace of this ParIdentifier.


        :param namespace: The namespace of this ParIdentifier.
        :type namespace: str
        """

        self._namespace = namespace
